
# Uses peter-evans/workflow-dispatch to trigger the app repo’s deploy_central.yml and wait for completion. Adds one shared approval gate per stage via central Environments.
name: Central Promotion (DEV→QA→UAT→PRD)
on:
  repository_dispatch:
    types: [release_ready]                # automatic when a repo tags
  workflow_dispatch:
    inputs:
      version: { type: string, required: true, description: 'vX.Y.Z' }
      repos:   { type: string, required: true, description: 'org/repoA,org/repoB' }
      start:   { type: choice,  required: false, options: [dev, qa, uat, production], default: dev }
      stop:    { type: choice,  required: false, options: [dev, qa, uat, production], default: production }

env:
  VERSION: ${{ github.event.client_payload.version || inputs.version }}
  REPOS_CSV: ${{ github.event.client_payload.repo && (github.event.client_payload.repo) || inputs.repos }}

concurrency: central-promotion-${{ env.VERSION }}      # 1 promotion per version

jobs:
  # Build the repo list matrix
  plan:
    runs-on: ubuntu-latest
    outputs:
      repos: ${{ steps.mk.outputs.repos }}
      seq:   ${{ steps.mk.outputs.seq }}
    steps:
      - id: mk
        run: |
          # repos
          echo "repos=$(jq -Rc 'split(",")' <<<"${REPOS_CSV// /}")" >> $GITHUB_OUTPUT
          # sequence
          map='{"dev":0,"qa":1,"uat":2,"production":3}'
          start=${{ inputs.start && fromJSON('"' + inputs.start + '"') || 'dev' }}
          stop=${{ inputs.stop && fromJSON('"' + inputs.stop + '"') || 'production' }}
          s=$(jq -n --argjson m "$map" --arg a "$start" --arg b "$stop" '$m[$a]') || true
          e=$(jq -n --argjson m "$map" --arg a "$start" --arg b "$stop" '$m[$b]') || true
          seq=$(jq -n --argjson s "$s" --argjson e "$e" '[ "dev","qa","uat","production"][s:e+1]')
          echo "seq=$seq" >> $GITHUB_OUTPUT

  dev:
    if: contains(fromJson(needs.plan.outputs.seq), 'dev')
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      matrix: { repo: ${{ fromJson(needs.plan.outputs.repos) }} }
      fail-fast: false
    steps:
      - name: ${{ matrix.repo }} → DEV
        uses: peter-evans/workflow-dispatch@v2
        with:
          token: ${{ secrets.CENTRAL_APP_TOKEN }}   # PAT/App with repo/workflow perms on targets
          repository: ${{ matrix.repo }}
          workflow: deploy_central.yml
          ref: main
          inputs:
            env: dev
            version: ${{ env.VERSION }}
          wait-for-completion: true
          # optional timeout: wait-for-completion-timeout: 90m

  qa:
    if: contains(fromJson(needs.plan.outputs.seq), 'qa')
    needs: dev
    runs-on: ubuntu-latest
    environment: qa-global                 # shared approval gate here
    strategy:
      matrix: { repo: ${{ fromJson(needs.plan.outputs.repos) }} }
      fail-fast: false
    steps:
      - name: ${{ matrix.repo }} → QA
        uses: peter-evans/workflow-dispatch@v2
        with:
          token: ${{ secrets.CENTRAL_APP_TOKEN }}
          repository: ${{ matrix.repo }}
          workflow: deploy_central.yml
          ref: main
          inputs:
            env: qa
            version: ${{ env.VERSION }}
          wait-for-completion: true

  uat:
    if: contains(fromJson(needs.plan.outputs.seq), 'uat')
    needs: qa
    runs-on: ubuntu-latest
    environment: uat-global
    strategy:
      matrix: { repo: ${{ fromJson(needs.plan.outputs.repos) }} }
      fail-fast: false
    steps:
      - name: ${{ matrix.repo }} → UAT
        uses: peter-evans/workflow-dispatch@v2
        with:
          token: ${{ secrets.CENTRAL_APP_TOKEN }}
          repository: ${{ matrix.repo }}
          workflow: deploy_central.yml
          ref: main
          inputs:
            env: uat
            version: ${{ env.VERSION }}
          wait-for-completion: true

  prod:
    if: contains(fromJson(needs.plan.outputs.seq), 'production')
    needs: uat
    runs-on: ubuntu-latest
    environment: prod-global
    strategy:
      matrix: { repo: ${{ fromJson(needs.plan.outputs.repos) }} }
      fail-fast: false
    steps:
      - name: ${{ matrix.repo }} → PROD
        uses: peter-evans/workflow-dispatch@v2
        with:
          token: ${{ secrets.CENTRAL_APP_TOKEN }}
          repository: ${{ matrix.repo }}
          workflow: deploy_central.yml
          ref: main
          inputs:
            env: production
            version: ${{ env.VERSION }}
          wait-for-completion: true
